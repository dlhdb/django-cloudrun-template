steps:
- id: 'build_image'
  name: 'gcr.io/cloud-builders/docker'
  args: [
    'build',
    '--no-cache',
    '-t', '${_REGION}-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/${_SERVICE_NAME}',
    '-f', 'Dockerfile',
    '.'
  ]

- id: 'push_image'
  name: 'gcr.io/cloud-builders/docker'
  args: [
    'push',
    '${_REGION}-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/${_SERVICE_NAME}'
  ]

#- id: "collect_static_files"
#  name: "gcr.io/google-appengine/exec-wrapper"
#  args:
#    [
#      "-i",
#      "${_REGION}-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/${_SERVICE_NAME}:latest",
#      "-s",
#      "${PROJECT_ID}:${_REGION}:${_SQL_INSTANCE_NAME}",
#      "-e",
#      "CLOUD_SECRET_NAME=${_CLOUD_SECRET_NAME}",
#      "--",
#      "python",
#      "manage.py",
#      "collectstatic",
#      "--verbosity",
#      "2",
#      "--no-input",
#    ]


- id: 'deploy_cloud_run'
  name: 'gcr.io/cloud-builders/gcloud'
  args: [
    'run',
    'deploy',
    '${_SERVICE_NAME}',
    '--image',
    '${_REGION}-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/${_SERVICE_NAME}:latest',
    '--region',
    '${_REGION}',
    '--platform',
    'managed',
    '--allow-unauthenticated',
#    '--set-env-vars',
#    'CLOUD_SECRET_NAME=${_CLOUD_SECRET_NAME}',
    '--set-env-vars',
    'CLOUDRUN_SERVICE_URL=${_CLOUDRUN_SERVICE_URL}',
  ]


images:
- '${_REGION}-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/${_SERVICE_NAME}'